//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 09/26/21 10:26:55 PM
namespace Microsoft.OData.SampleService.Models.TripPin
{
    /// <summary>
    /// There are no comments for EventSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("EventSingle")]
    public partial class EventSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Event>
    {
        /// <summary>
        /// Initialize a new EventSingle object.
        /// </summary>
        public EventSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EventSingle object.
        /// </summary>
        public EventSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EventSingle object.
        /// </summary>
        public EventSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Event> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for Event in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PlanItemId
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("PlanItemId")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Event")]
    public partial class Event : PlanItem
    {
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="planItemId">Initial value of PlanItemId.</param>
        /// <param name="occursAt">Initial value of OccursAt.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Event CreateEvent(int planItemId, global::Microsoft.OData.SampleService.Models.TripPin.EventLocation occursAt)
        {
            Event @event = new Event();
            @event.PlanItemId = planItemId;
            if ((occursAt == null))
            {
                throw new global::System.ArgumentNullException("occursAt");
            }
            @event.OccursAt = occursAt;
            return @event;
        }
        /// <summary>
        /// There are no comments for Property Description in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Description")]
        public virtual string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                this.OnDescriptionChanging(value);
                this._Description = value;
                this.OnDescriptionChanged();
                this.OnPropertyChanged("Description");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        /// <summary>
        /// There are no comments for Property OccursAt in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("OccursAt")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "OccursAt is required.")]
        public virtual global::Microsoft.OData.SampleService.Models.TripPin.EventLocation OccursAt
        {
            get
            {
                return this._OccursAt;
            }
            set
            {
                this.OnOccursAtChanging(value);
                this._OccursAt = value;
                this.OnOccursAtChanged();
                this.OnPropertyChanged("OccursAt");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.SampleService.Models.TripPin.EventLocation _OccursAt;
        partial void OnOccursAtChanging(global::Microsoft.OData.SampleService.Models.TripPin.EventLocation value);
        partial void OnOccursAtChanged();
        /// <summary>
        /// There are no comments for Property DynamicProperties in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("DynamicProperties")]
        [global::Microsoft.OData.Client.ContainerProperty]
        public virtual global::System.Collections.Generic.IDictionary<string, object> DynamicProperties
        {
            get
            {
                return this._DynamicProperties;
            }
            set
            {
                this.OnDynamicPropertiesChanging(value);
                this._DynamicProperties = value;
                this.OnDynamicPropertiesChanged();
                this.OnPropertyChanged("DynamicProperties");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Collections.Generic.IDictionary<string, object> _DynamicProperties = new global::System.Collections.Generic.Dictionary<string, object>();
        partial void OnDynamicPropertiesChanging(global::System.Collections.Generic.IDictionary<string, object> value);
        partial void OnDynamicPropertiesChanged();
    }
}
